{"ast":null,"code":"var _jsxFileName = \"/Users/minakhosravi/Desktop/chat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { func } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDEPYPHvbN3NnY3xeynCZumLmT4LCKpkiM\",\n  authDomain: \"frictionless-faction.firebaseapp.com\",\n  projectId: \"frictionless-faction\",\n  storageBucket: \"frictionless-faction.appspot.com\",\n  messagingSenderId: \"77867668377\",\n  appId: \"1:77867668377:web:c16c299d503b947f92f908\",\n  measurementId: \"G-SEYMGF0TT7\"\n});\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst [user] = useAuthState(auth);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: user ? /*#__PURE__*/_jsxDEV(\"chatRoom\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"signIn\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction signIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: signInWithGoogle,\n    children: \" Sign in with Google \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n;\n\nfunction signOut() {\n  return auth.currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => auth.signOut(),\n    children: \" Sign Out\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n;\n\nfunction chatRoom() {\n  _s();\n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMassage, {\n      massage: msg\n    }, msg.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 40\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(chatRoom, \"O0dyPdqNWV0yO5QBetp+6dw5Oyk=\", false, function () {\n  return [useCollectionData];\n});\n\n;\n\nfunction ChatMassage(props) {\n  const {\n    text,\n    uid\n  } = props.message;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ChatMassage;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMassage\");","map":{"version":3,"sources":["/Users/minakhosravi/Desktop/chat/src/App.js"],"names":["React","firebase","useAuthState","useCollectionData","func","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","user","App","signIn","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signOut","currentUser","chatRoom","messagesRef","collection","query","orderBy","limit","messages","idField","map","msg","id","ChatMassage","props","text","uid","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;AACA,SAASC,IAAT,QAAqB,YAArB;;AAEAH,QAAQ,CAACI,aAAT,CAAuB;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,sCAFS;AAGrBC,EAAAA,SAAS,EAAE,sBAHU;AAIrBC,EAAAA,aAAa,EAAE,kCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,aALE;AAMrBC,EAAAA,KAAK,EAAE,0CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;AAaA,MAAMC,IAAI,GAAGZ,QAAQ,CAACY,IAAT,EAAb;AACA,MAAMC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAIA,MAAM,CAACC,IAAD,IAASb,YAAY,CAACW,IAAD,CAA3B;;AAEA,SAASG,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA,kBACGD,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAkB;AAAA;AAAA;AAAA;AAAA;AADzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAVQC,G;;AAaT,SAASC,MAAT,GAAkB;AAChB,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,QAAQ,GAAG,IAAIlB,QAAQ,CAACY,IAAT,CAAcO,kBAAlB,EAAjB;AACAP,IAAAA,IAAI,CAACQ,eAAL,CAAqBF,QAArB;AACD,GAHD;;AAKA,sBACE;AAAQ,IAAA,OAAO,EAAID,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;AAAA;;AAED,SAASI,OAAT,GAAmB;AACjB,SAAOT,IAAI,CAACU,WAAL,iBACL;AAAQ,IAAA,OAAO,EAAI,MAAMV,IAAI,CAACS,OAAL,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;AAAA;;AAKD,SAASE,QAAT,GAAoB;AAAA;;AAClB,QAAMC,WAAW,GAAGX,SAAS,CAACY,UAAV,CAAqB,UAArB,CAApB;AACA,QAAMC,KAAK,GAAGF,WAAW,CAACG,OAAZ,CAAoB,WAApB,EAAiCC,KAAjC,CAAuC,EAAvC,CAAd;AAEA,QAAM,CAACC,QAAD,IAAa3B,iBAAiB,CAACwB,KAAD,EAAQ;AAACI,IAAAA,OAAO,EAAE;AAAV,GAAR,CAApC;AAEA,sBACE;AAAA,cACGD,QAAQ,IAAIA,QAAQ,CAACE,GAAT,CAAaC,GAAG,iBAAI,QAAC,WAAD;AAA0B,MAAA,OAAO,EAAEA;AAAnC,OAAkBA,GAAG,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,YAApB;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAZQV,Q;UAIYrB,iB;;;AAQpB;;AAGD,SAASgC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAcF,KAAK,CAACG,OAA1B;AAGA,sBACE;AAAA,cAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;MAPQF,W;AAST,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nimport { func } from 'prop-types';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDEPYPHvbN3NnY3xeynCZumLmT4LCKpkiM\",\n  authDomain: \"frictionless-faction.firebaseapp.com\",\n  projectId: \"frictionless-faction\",\n  storageBucket: \"frictionless-faction.appspot.com\",\n  messagingSenderId: \"77867668377\",\n  appId: \"1:77867668377:web:c16c299d503b947f92f908\",\n  measurementId: \"G-SEYMGF0TT7\"\n})\n\n\n\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\n\nconst [user] = useAuthState(auth);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <section>\n          {user ? <chatRoom /> : <signIn />}\n        </section>\n      </header>\n    </div>\n  );\n}\n\n\nfunction signIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return(\n    <button onClick = {signInWithGoogle}> Sign in with Google </button>\n  )\n\n};\n\nfunction signOut() {\n  return auth.currentUser && (\n    <button onClick = {() => auth.signOut()}> Sign Out</button>\n  )\n\n};\n\n\n\n\nfunction chatRoom() {\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n\n  return(\n    <div>\n      {messages && messages.map(msg => <ChatMassage key={msg.id} massage={msg} />)}\n    </div>\n  )\n\n};\n\n\nfunction ChatMassage(props) {\n  const {text, uid} = props.message;\n\n\n  return (\n    <p>{text}</p>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}